@model IngresoPersonal.Models.FotocheckTest

@{
    ViewBag.Title = "Crear Registro";
}

<h2>Crear Registro</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Fotochecks</h4>

    <div>
        @Html.ActionLink("« Ver Registros", "Index", null, new { @class = " btn btn-primary " })
    </div>

    <hr />

    <section class="vh-auto py-4">
        <div class="container-fluid h-custom">
            <div class="row d-flex justify-content-start align-items-center h-auto">

                <div class="col-md-9 col-lg-6 col-xl-5">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Cod_Per, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Cód. Persona</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cod_Per, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Cod_Per, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Cod_Tarjeta, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Cód. Tarjeta</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cod_Tarjeta, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Cod_Tarjeta, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Cod_Trabajador, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Cód. Trabajador</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cod_Trabajador, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Cod_Trabajador, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Nombres</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Apellidos</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Domicilio, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Domicilio</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Domicilio, new { @class = "form-control", @Value = "-", @required = "required" })
                            @Html.ValidationMessageFor(model => model.Domicilio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.DNI, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">DNI</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DNI, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class = "control-label col-md-2">Estado</label>
                        <div class="col-md-10">
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(model => model.Activo, "1", new { @checked = "true", @class = "form-check-input" })
                                <label class="form-check-label" for="inlineRadio1">Activo</label>
                            </div>
                            <div class="form-check form-check-inline">
                                @Html.RadioButtonFor(model => model.Activo, "0", new { @class = "form-check-input" })
                                <label class="form-check-label" for="inlineRadio2">Inactivo</label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Fotos, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Foto</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Fotos, new { @class = "form-control", @readonly = "readonly", @Value = "\\\\timat2k803\\Personal\\Fotos2010\\" })
                            @Html.ValidationMessageFor(model => model.Fotos, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Cod_Tarjeta2, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Cód. Tarjeta 2</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cod_Tarjeta2, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Cod_Tarjeta2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.cod_Fotocheck, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Cód. Fotocheck</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cod_Fotocheck, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.cod_Fotocheck, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.GrupoSanguineo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Grupo Sanguíneo</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.GrupoSanguineo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.GrupoSanguineo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.alergias, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Alergias</label>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.alergias, new { @class = "form-control", @Value = "-", @required = "required" })
                            @Html.ValidationMessageFor(model => model.alergias, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group d-md-flex mb-md-3">
                        @*@Html.LabelFor(model => model.Cargo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label class="control-label col-md-2">Cargo</label>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cargo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Cargo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1 my-3">
                    <div class="form-group justify-content-center">
                        <div class="divider d-flex my-4 justify-content-center">
                            <p class="text-center fw-bold mx-3 mb-0">Carga Imagen jpg/jpeg/png</p>
                        </div>
                        <div class="text-center text-lg-center">
                            <img src="~/imgs/uploading.svg" width="300"/>
                        </div>
                        <div class="my-3 justify-content-center">
                            <input name="image" type="file" id="fileName" accept=".jpg,.jpeg,.png" onchange="validateFileType()" class="form-control" />
                            <script type="text/javascript">
                                function validateFileType() {
                                    var fileName = document.getElementById("fileName").files[0].name;
                                    var idxDot = fileName.lastIndexOf(".") + 1;
                                    var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
                                    if (extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
                                        //TO DO
                                        var c = String.fromCharCode(92);
                                        document.getElementById("Fotos").value = c + "\\timat2k803" + c + "Personal" + c + "Fotos2010" + c + fileName;
                                    } else {
                                        alert("Subir unicamente archivos jpg/jpeg y png!");
                                    }
                                }
                            </script>
                        </div>                       
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear Registro" class="btn btn-success" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
